View(subset)
#pull out separate table with only team, week, c_week, remove all duplicates,
#do cumulative week on just this table and merge back in
subset<-scoresandstats[,.(Tm,week,c_week,season)]
subset<-subset[!duplicated(subset)]
subset<-subset[Tm=="TB" || Tm =="NO"]
subset<-subset[Tm=="TB"]
#pull out separate table with only team, week, c_week, remove all duplicates,
#do cumulative week on just this table and merge back in
subset<-scoresandstats[,.(Tm,week,c_week,season)]
subset<-subset[!duplicated(subset)]
subset<-subset[Tm=="TB"]
subset<-subset[,cumulativeweek := cumsum(c_week), by = "Tm"]
#pull out separate table with only team, week, c_week, remove all duplicates,
#do cumulative week on just this table and merge back in
subset<-scoresandstats[,.(Tm,week,c_week,season)]
subset<-subset[!duplicated(subset)]
subset<-subset[Tm=="TB"]||subset[Tm=="NO"]
subset<-subset[,cumulativeweek := cumsum(c_week), by = "Tm"]
subset<-subset[Tm=="TB"],subset[Tm=="NO"]
subset<-subset[Tm=="TB"]||subset[Tm=="NO"]
subset<-subset[Tm=="TB"|| Tm=="NO"]
View(subset)
subset<-subset[Tm=="TB"|| Tm=="NE"]
#pull out separate table with only team, week, c_week, remove all duplicates,
#do cumulative week on just this table and merge back in
sub<-scoresandstats[,.(Tm,week,c_week,season)]
sub<-sub[!duplicated(subset)]
sub<-subset(sub, Tm == "TB" || Tm =="NE")
sub<-sub[,cumulativeweek := cumsum(c_week), by = "Tm"]
sub<-subset(sub, Tm == "TB")
#pull out separate table with only team, week, c_week, remove all duplicates,
#do cumulative week on just this table and merge back in
sub<-scoresandstats[,.(Tm,week,c_week,season)]
sub<-sub[!duplicated(subset)]
library(data.table)
#read in player statistics table
playerstats<-fread("./project/volume/data/interim/gamePlayerstats.csv")
#read in box scores table
boxscores<-fread("./project/volume/data/interim/allBoxscores.csv")
#only concerned with stats from 2009 on as the box scores data starts at 2009
playerstats<-playerstats[season>2008]
#Create home and away team tables
home<-boxscores[,.(game_id,home_team,week,season,home_score)]
setnames(home,c("home_team","home_score"),c("Tm","score"))
away<-boxscores[,.(game_id,away_team,week,season,away_score)]
setnames(away,c("away_team","away_score"),c("Tm","score"))
#Rbind home and away to create allboxscores
allboxscores<-rbind(home,away)
allboxscores<-merge(allboxscores,allboxscores,by=c("game_id","week","season"),allow.cartesian = T)
setnames(allboxscores,c("Tm.x","score.x","Tm.y","score.y"), c("Tm","Tmscore","Opponent","Opponentscore"))
allboxscores<-allboxscores[!Tm==Opponent]
#Fix situations where Team name (Tm) is different from one table to the next
playerstats[playerstats$Tm == "NOR"]$Tm<-"NO"
playerstats[playerstats$Tm == "KAN"]$Tm<-"KC"
playerstats[playerstats$Tm == "NWE"]$Tm<-"NE"
playerstats[playerstats$Tm == "GNB"]$Tm<-"GB"
playerstats[playerstats$Tm == "SFO"]$Tm<-"SF"
playerstats[playerstats$Tm == "TAM"]$Tm<-"TB"
playerstats[playerstats$Tm == "SDG"]$Tm<-"SD"
playerstats[playerstats$Tm == "LAR"]$Tm<-"LA"
allboxscores[allboxscores$Tm=="JAC"]$Tm<-"JAX"
#Set keys for each table so merge can occur
setkey(playerstats,week,season,Tm)
setkey(allboxscores,week,season,Tm)
#something not happening properly on this merge
scoresandstats<-merge(playerstats,allboxscores, all.x = T)
scoresandstats<-scoresandstats[order(season,week)]
#pull out separate table with only team, week, c_week, remove all duplicates,
#do cumulative week on just this table and merge back in
sub<-scoresandstats[,.(Tm,week,c_week,season)]
sub<-sub[!duplicated(subset)]
sub<-subset(sub, Tm == "TB")
View(sub)
sub<-sub[Tm == "TB"]
sub<-sub[,cumulativeweek := cumsum(c_week), by = "Tm"]
#pull out separate table with only team, week, c_week, remove all duplicates,
#do cumulative week on just this table and merge back in
sub<-scoresandstats[,.(Tm,week,c_week,season)]
sub<-sub[!duplicated(subset)]
sub<-sub[Tm == "TB"]
sub<-sub[,cumulativeweek := cumsum(c_week), by = "Tm"]
View(scoresandstats)
View(sub)
#pull out separate table with only team, week, c_week, remove all duplicates,
#do cumulative week on just this table and merge back in
subset<-scoresandstats[,.(Tm,week,c_week,season)]
subset<-subset[!duplicated(subset)]
subset<-subset[Tm=="TB"]
?duplicated
subset$weekseason<-subset$week+subset$season
View(subset)
subset$weekseason<-cbind(subset$week,subset$season)
View(subset)
library(data.table)
#read in player statistics table
playerstats<-fread("./project/volume/data/interim/gamePlayerstats.csv")
#read in box scores table
boxscores<-fread("./project/volume/data/interim/allBoxscores.csv")
#only concerned with stats from 2009 on as the box scores data starts at 2009
playerstats<-playerstats[season>2008]
#Create home and away team tables
home<-boxscores[,.(game_id,home_team,week,season,home_score)]
setnames(home,c("home_team","home_score"),c("Tm","score"))
away<-boxscores[,.(game_id,away_team,week,season,away_score)]
setnames(away,c("away_team","away_score"),c("Tm","score"))
#Rbind home and away to create allboxscores
allboxscores<-rbind(home,away)
allboxscores<-merge(allboxscores,allboxscores,by=c("game_id","week","season"),allow.cartesian = T)
setnames(allboxscores,c("Tm.x","score.x","Tm.y","score.y"), c("Tm","Tmscore","Opponent","Opponentscore"))
allboxscores<-allboxscores[!Tm==Opponent]
#Fix situations where Team name (Tm) is different from one table to the next
playerstats[playerstats$Tm == "NOR"]$Tm<-"NO"
playerstats[playerstats$Tm == "KAN"]$Tm<-"KC"
playerstats[playerstats$Tm == "NWE"]$Tm<-"NE"
playerstats[playerstats$Tm == "GNB"]$Tm<-"GB"
playerstats[playerstats$Tm == "SFO"]$Tm<-"SF"
playerstats[playerstats$Tm == "TAM"]$Tm<-"TB"
playerstats[playerstats$Tm == "SDG"]$Tm<-"SD"
playerstats[playerstats$Tm == "LAR"]$Tm<-"LA"
allboxscores[allboxscores$Tm=="JAC"]$Tm<-"JAX"
#Set keys for each table so merge can occur
setkey(playerstats,week,season,Tm)
setkey(allboxscores,week,season,Tm)
#something not happening properly on this merge
scoresandstats<-merge(playerstats,allboxscores, all.x = T)
scoresandstats<-scoresandstats[order(season,week)]
DT<- scoresandstats
DT<-DT[!duplicated(game_id)]
DT<-DT[,cumulativeweek := cumsum(c_week), by = "week"]
#pull out separate table with only team, week, c_week, remove all duplicates,
#do cumulative week on just this table and merge back in
subset<-scoresandstats[,.(Tm,week,c_week,season)]
subset<-subset[!duplicated(subset)]
subset<-subset[Tm=="TB"]
View(subset)
subset<-subset[,cumulativeweek := cumsum(c_week), by = "Tm"]
View(subset)
#pull out separate table with only team, week, c_week, remove all duplicates,
#do cumulative week on just this table and merge back in
subset<-scoresandstats[,.(Tm,week,c_week,season)]
subset<-subset[!duplicated(subset)]
subset<-subset[subset$Tm=="TB" || subset$Tm == "NO"]
subset<-subset[,cumulativeweek := cumsum(c_week), by = "Tm"]
#pull out separate table with only team, week, c_week, remove all duplicates,
#do cumulative week on just this table and merge back in
subset<-scoresandstats[,.(Tm,week,c_week,season)]
subset<-subset[!duplicated(subset)]
subset<-subset[subset$Tm=="TB"]
subset<-subset[,cumulativeweek := cumsum(c_week), by = "Tm"]
View(subset)
subset
subset
library(data.table)
#read in player statistics table
playerstats<-fread("./project/volume/data/interim/gamePlayerstats.csv")
#read in box scores table
boxscores<-fread("./project/volume/data/interim/allBoxscores.csv")
#only concerned with stats from 2009 on as the box scores data starts at 2009
playerstats<-playerstats[season>2008]
#Create home and away team tables
home<-boxscores[,.(game_id,home_team,week,season,home_score)]
setnames(home,c("home_team","home_score"),c("Tm","score"))
away<-boxscores[,.(game_id,away_team,week,season,away_score)]
setnames(away,c("away_team","away_score"),c("Tm","score"))
#Rbind home and away to create allboxscores
allboxscores<-rbind(home,away)
allboxscores<-merge(allboxscores,allboxscores,by=c("game_id","week","season"),allow.cartesian = T)
setnames(allboxscores,c("Tm.x","score.x","Tm.y","score.y"), c("Tm","Tmscore","Opponent","Opponentscore"))
allboxscores<-allboxscores[!Tm==Opponent]
#Fix situations where Team name (Tm) is different from one table to the next
playerstats[playerstats$Tm == "NOR"]$Tm<-"NO"
playerstats[playerstats$Tm == "KAN"]$Tm<-"KC"
playerstats[playerstats$Tm == "NWE"]$Tm<-"NE"
playerstats[playerstats$Tm == "GNB"]$Tm<-"GB"
playerstats[playerstats$Tm == "SFO"]$Tm<-"SF"
playerstats[playerstats$Tm == "TAM"]$Tm<-"TB"
playerstats[playerstats$Tm == "SDG"]$Tm<-"SD"
playerstats[playerstats$Tm == "LAR"]$Tm<-"LA"
allboxscores[allboxscores$Tm=="JAC"]$Tm<-"JAX"
#Set keys for each table so merge can occur
setkey(playerstats,week,season,Tm)
setkey(allboxscores,week,season,Tm)
#something not happening properly on this merge
scoresandstats<-merge(playerstats,allboxscores, all.x = T)
scoresandstats<-scoresandstats[order(season,week)]
DT<- scoresandstats
DT<-DT[!duplicated(game_id)]
DT<-DT[,cumulativeweek := cumsum(c_week), by = "week"]
#pull out separate table with only team, week, c_week, remove all duplicates,
#do cumulative week on just this table and merge back in
sub<-scoresandstats[,.(Tm,week,c_week,season)]
sub<-sub[!duplicated(sub)]
sub<-sub[subset$Tm=="TB"]
sub<-sub[,cumulativeweek := cumsum(c_week), by = "Tm"]
View(sub)
#pull out separate table with only team, week, c_week, remove all duplicates,
#do cumulative week on just this table and merge back in
sub<-scoresandstats[,.(Tm,week,c_week,season)]
sub<-sub[!duplicated(sub)]
sub<-sub[sub$Tm=="TB"]
sub<-sub[,cumulativeweek := cumsum(c_week), by = "Tm"]
View(sub)
library(data.table)
statsandscores<-fread("./project/volume/data/processed/StatsandBoxscores.csv")
teamAllowed<-dcast(statsandscores,Opponent+game_id+season+week+cumulativeweek~.,sum,na.rm=T,value.var = c("PassingYds","Int","PassingAtt"))
teamAllowed<-statsandscores[,.(PassingYds=sum(PassingYds)),by=c("Opponent","game_id","season",
"week", "cumulativeweek")]
View(teamAllowed)
View(DT)
#Create separate table with just team, week, and c_week to calculate the correct cumulative week
DT<- scoresandstats[,.(team,week,c_week)]
#Create separate table with just team, week, and c_week to calculate the correct cumulative week
DT<- scoresandstats[,.(Tm,week,c_week)]
DT<-DT[!duplicated(DT)]
DT<-DT[,cumulativeweek := cumsum(c_week), by = "Tm"]
DT
DT
View(DT)
View(sub)
#Create separate table with just team, week, and c_week to calculate the correct cumulative week
DT<- scoresandstats[,.(season,week,c_week)]
DT<-DT[!duplicated(DT)]
DT<-DT[,cumulativeweek := cumsum(c_week), by = "Tm"]
#Create separate table with just team, week, and c_week to calculate the correct cumulative week
DT<- scoresandstats[,.(season,week,c_week)]
DT<-DT[!duplicated(DT)]
View(DT)
DT<-DT[,cumulativeweek := cumsum(c_week)]
DT<-DT[,cumulativeweek := cumsum(c_week)]
View(DT)
View(statsandscores)
library(data.table)
#read in player statistics table
playerstats<-fread("./project/volume/data/interim/gamePlayerstats.csv")
#read in box scores table
boxscores<-fread("./project/volume/data/interim/allBoxscores.csv")
#only concerned with stats from 2009 on as the box scores data starts at 2009
playerstats<-playerstats[season>2008]
#Create home and away team tables
home<-boxscores[,.(game_id,home_team,week,season,home_score)]
setnames(home,c("home_team","home_score"),c("Tm","score"))
away<-boxscores[,.(game_id,away_team,week,season,away_score)]
setnames(away,c("away_team","away_score"),c("Tm","score"))
#Rbind home and away to create allboxscores
allboxscores<-rbind(home,away)
allboxscores<-merge(allboxscores,allboxscores,by=c("game_id","week","season"),allow.cartesian = T)
setnames(allboxscores,c("Tm.x","score.x","Tm.y","score.y"), c("Tm","Tmscore","Opponent","Opponentscore"))
allboxscores<-allboxscores[!Tm==Opponent]
#Fix situations where Team name (Tm) is different from one table to the next
playerstats[playerstats$Tm == "NOR"]$Tm<-"NO"
playerstats[playerstats$Tm == "KAN"]$Tm<-"KC"
playerstats[playerstats$Tm == "NWE"]$Tm<-"NE"
playerstats[playerstats$Tm == "GNB"]$Tm<-"GB"
playerstats[playerstats$Tm == "SFO"]$Tm<-"SF"
playerstats[playerstats$Tm == "TAM"]$Tm<-"TB"
playerstats[playerstats$Tm == "SDG"]$Tm<-"SD"
playerstats[playerstats$Tm == "LAR"]$Tm<-"LA"
allboxscores[allboxscores$Tm=="JAC"]$Tm<-"JAX"
#Set keys for each table so merge can occur
setkey(playerstats,week,season,Tm)
setkey(allboxscores,week,season,Tm)
#something not happening properly on this merge
scoresandstats<-merge(playerstats,allboxscores, all.x = T)
scoresandstats<-scoresandstats[order(season,week)]
#Create separate table with just team, week, and c_week to calculate the correct cumulative week
DT<- scoresandstats[,.(season,week,c_week)]
DT<-DT[!duplicated(DT)]
DT<-DT[,cumulativeweek := cumsum(c_week)]
setkey(scoresandstats, season, week)
setkey(DT,season,week)
scoresandstats<-merge(scoresandstats,DT)
View(scoresandstats)
DT$c_week<-NULL
scoresandstats$c_week<-NULL
setkey(scoresandstats, season, week)
setkey(DT,season,week)
scoresandstats<-merge(scoresandstats,DT)
library(data.table)
#read in player statistics table
playerstats<-fread("./project/volume/data/interim/gamePlayerstats.csv")
#read in box scores table
boxscores<-fread("./project/volume/data/interim/allBoxscores.csv")
#only concerned with stats from 2009 on as the box scores data starts at 2009
playerstats<-playerstats[season>2008]
#Create home and away team tables
home<-boxscores[,.(game_id,home_team,week,season,home_score)]
setnames(home,c("home_team","home_score"),c("Tm","score"))
away<-boxscores[,.(game_id,away_team,week,season,away_score)]
setnames(away,c("away_team","away_score"),c("Tm","score"))
#Rbind home and away to create allboxscores
allboxscores<-rbind(home,away)
allboxscores<-merge(allboxscores,allboxscores,by=c("game_id","week","season"),allow.cartesian = T)
setnames(allboxscores,c("Tm.x","score.x","Tm.y","score.y"), c("Tm","Tmscore","Opponent","Opponentscore"))
allboxscores<-allboxscores[!Tm==Opponent]
#Fix situations where Team name (Tm) is different from one table to the next
playerstats[playerstats$Tm == "NOR"]$Tm<-"NO"
playerstats[playerstats$Tm == "KAN"]$Tm<-"KC"
playerstats[playerstats$Tm == "NWE"]$Tm<-"NE"
playerstats[playerstats$Tm == "GNB"]$Tm<-"GB"
playerstats[playerstats$Tm == "SFO"]$Tm<-"SF"
playerstats[playerstats$Tm == "TAM"]$Tm<-"TB"
playerstats[playerstats$Tm == "SDG"]$Tm<-"SD"
playerstats[playerstats$Tm == "LAR"]$Tm<-"LA"
allboxscores[allboxscores$Tm=="JAC"]$Tm<-"JAX"
#Set keys for each table so merge can occur
setkey(playerstats,week,season,Tm)
setkey(allboxscores,week,season,Tm)
#something not happening properly on this merge
scoresandstats<-merge(playerstats,allboxscores, all.x = T)
scoresandstats<-scoresandstats[order(season,week)]
#Create separate table with just team, week, and c_week to calculate the correct cumulative week
DT<- scoresandstats[,.(season,week,c_week)]
DT<-DT[!duplicated(DT)]
DT<-DT[,cumulativeweek := cumsum(c_week)]
DT$c_week<-NULL
scoresandstats$c_week<-NULL
setkey(scoresandstats, season, week)
setkey(DT,season,week)
scoresandstats<-merge(scoresandstats,DT)
View(scoresandstats)
fwrite(scoresandstats,"project/volume/data/processed/StatsandBoxscores.csv")
library(data.table)
statsandscores<-fread("./project/volume/data/processed/StatsandBoxscores.csv")
View(statsandscores)
teamAllowed<-dcast(statsandscores,Opponent+Tm+game_id+season+week+cumulativeweek~.,
sum,na.rm=T,value.var = c("PassingYds","Int","PassingAtt","Cmp","RushingAtt",
"RushingYds","RushingTD","Rec","Tgt","ReceivingYds",
"ReceivingTD","FL"))
View(teamAllowed)
NFLvalues<-c("PassingYds","Int","PassingAtt","Cmp","RushingAtt",
"RushingYds","RushingTD","Rec","Tgt","ReceivingYds",
"ReceivingTD","FL","PPRFantasyPoints","StandardFantasyPoints",
"HalfPPRFantasyPoints")
teamAllowed<-dcast(statsandscores,Opponent+Tm+game_id+season+week+cumulativeweek~.,
sum,na.rm=T,value.var = NFLvalues)
View(teamAllowed)
View(scoresandstats)
View(statsandscores)
View(scoresandstats)
View(boxscores)
View(playerstats)
library(data.table)
#read in path of where data is located and list files in that path
path1<-"./project/volume/data/external/external_data/weekly"
year_files<- list.files(path1)
year_files
if (file.exists("./project/volume/data/interim/gamePlayerstats.csv")) {
file.remove("./project/volume/data/interim/gamePlayerstats.csv")}
i = 1
j = 1
year <- year_files[i]
path2<-paste0(path1,"/",year)
ear_week_files<-list.files(path2)
master<-NULL
week <- fread(paste0(path2, "/",year_week_files[j]))
year_week_files<-list.files(path2)
master<-NULL
week <- fread(paste0(path2, "/",year_week_files[j]))
week$week<-j
week$c_week<-1
week$season<-year
master<-rbind(master,week)
week <- fread(paste0(path2, "/",year_week_files[j]))
week
year_week_files[j]
library(data.table)
#read in path of where data is located and list files in that path
path1<-"./project/volume/data/external/external_data/weekly"
year_files<- list.files(path1)
#remove file if it already exists to not override the data
if (file.exists("./project/volume/data/interim/gamePlayerstats.csv")) {
file.remove("./project/volume/data/interim/gamePlayerstats.csv")}
#for loop to examine all the files containing data for different years
for (i in 1:length(year_files)){
#set year equal to what year file is currently being looked at, and create the subpath
year <- year_files[i]
path2<-paste0(path1,"/",year)
year_week_files<-list.files(path2)
master<-NULL
#j for loop to get data from every week in a given year
for (j in 1:length(year_week_files)) {
week <- fread(paste0(path2, "/",year_week_files[j]))
week_num<-gsub("week","",year_week_files[j])
week_num<-gsub(".csv","",week_num)
week_num<-as.numeric(week_num)
week$week<-week_num
week$c_week<-1
week$season<-year
master<-rbind(master,week)
}
#write out rbinded master files for each year to one big file
fwrite(master,"./project/volume/data/interim/gamePlayerstats.csv",append = T)
}
library(data.table)
#read in player statistics table
playerstats<-fread("./project/volume/data/interim/gamePlayerstats.csv")
#read in box scores table
boxscores<-fread("./project/volume/data/interim/allBoxscores.csv")
#only concerned with stats from 2009 on as the box scores data starts at 2009
playerstats<-playerstats[season>2008]
#Create home and away team tables
home<-boxscores[,.(game_id,home_team,week,season,home_score)]
setnames(home,c("home_team","home_score"),c("Tm","score"))
away<-boxscores[,.(game_id,away_team,week,season,away_score)]
setnames(away,c("away_team","away_score"),c("Tm","score"))
#Rbind home and away to create allboxscores
allboxscores<-rbind(home,away)
allboxscores<-merge(allboxscores,allboxscores,by=c("game_id","week","season"),allow.cartesian = T)
setnames(allboxscores,c("Tm.x","score.x","Tm.y","score.y"), c("Tm","Tmscore","Opponent","Opponentscore"))
allboxscores<-allboxscores[!Tm==Opponent]
#Fix situations where Team name (Tm) is different from one table to the next
playerstats[playerstats$Tm == "NOR"]$Tm<-"NO"
playerstats[playerstats$Tm == "KAN"]$Tm<-"KC"
playerstats[playerstats$Tm == "NWE"]$Tm<-"NE"
playerstats[playerstats$Tm == "GNB"]$Tm<-"GB"
playerstats[playerstats$Tm == "SFO"]$Tm<-"SF"
playerstats[playerstats$Tm == "TAM"]$Tm<-"TB"
playerstats[playerstats$Tm == "SDG"]$Tm<-"SD"
playerstats[playerstats$Tm == "LAR"]$Tm<-"LA"
allboxscores[allboxscores$Tm=="JAC"]$Tm<-"JAX"
#Set keys for each table so merge can occur
setkey(playerstats,week,season,Tm)
setkey(allboxscores,week,season,Tm)
#something not happening properly on this merge
scoresandstats<-merge(playerstats,allboxscores, all.x = T)
scoresandstats<-scoresandstats[order(season,week)]
#Create separate table with just team, week, and c_week to calculate the correct cumulative week
DT<- scoresandstats[,.(season,week,c_week)]
DT<-DT[!duplicated(DT)]
DT<-DT[,cumulativeweek := cumsum(c_week)]
DT$c_week<-NULL
scoresandstats$c_week<-NULL
setkey(scoresandstats, season, week)
setkey(DT,season,week)
scoresandstats<-merge(scoresandstats,DT)
fwrite(scoresandstats,"project/volume/data/processed/StatsandBoxscores.csv")
library(data.table)
statsandscores<-fread("./project/volume/data/processed/StatsandBoxscores.csv")
NFLvalues<-c("PassingYds","Int","PassingAtt","Cmp","RushingAtt",
"RushingYds","RushingTD","Rec","Tgt","ReceivingYds",
"ReceivingTD","FL","PPRFantasyPoints","StandardFantasyPoints",
"HalfPPRFantasyPoints")
teamAllowed<-dcast(statsandscores,Opponent+Tm+game_id+season+week+cumulativeweek~.,
sum,na.rm=T,value.var = NFLvalues)
View(teamAllowed)
is.na(teamAllowed$game_id)
setkey(teamAllowed,Opponent,cumulativeweek)
View(teamAllowed)
teamAllowed[, roll_3_passing_yards := Reduce(`+`, shift(PassingYds, 0:2))]
View(teamAllowed)
teamAllowed[, roll_3_passing_yards := Reduce(`+`, shift(PassingYds, 1:3))]
View(teamAllowed)
teamAllowed[, roll_4_passing_yards := Reduce(`+`, shift(PassingYds, 1:4))]
View(teamAllowed)
teamAllowed[, roll_4_passing_yards := Reduce(`+`, shift("PassingYds", 1:4))]
teamAllowed[, roll_4_passing_yards := Reduce(`+`, shift(get("PassingYds"), 1:4))]
View(teamAllowed)
roll_4_passing_yards<-NULL
roll_3_passing_yards<-NULL
teamAllowed[, roll_4_passing_yards := Reduce(`+`, shift(get("PassingYds"), 1:4))]
View(teamAllowed)
library(data.table)
statsandscores<-fread("./project/volume/data/processed/StatsandBoxscores.csv")
NFLvalues<-c("PassingYds","Int","PassingAtt","Cmp","RushingAtt",
"RushingYds","RushingTD","Rec","Tgt","ReceivingYds",
"ReceivingTD","FL","PPRFantasyPoints","StandardFantasyPoints",
"HalfPPRFantasyPoints")
teamAllowed<-dcast(statsandscores,Opponent+Tm+game_id+season+week+cumulativeweek~.,
sum,na.rm=T,value.var = NFLvalues)
setkey(teamAllowed,Opponent,cumulativeweek)
teamAllowed[, roll_4_passing_yards := Reduce(`+`, shift(get("PassingYds"), 1:4))]
View(teamAllowed)
library(data.table)
statsandscores<-fread("./project/volume/data/processed/StatsandBoxscores.csv")
NFLvalues<-c("PassingYds","Int","PassingAtt","Cmp","RushingAtt",
"RushingYds","RushingTD","Rec","Tgt","ReceivingYds",
"ReceivingTD","FL","PPRFantasyPoints","StandardFantasyPoints",
"HalfPPRFantasyPoints")
teamAllowed<-dcast(statsandscores,Opponent+Tm+game_id+season+week+cumulativeweek~.,
sum,na.rm=T,value.var = NFLvalues)
setkey(teamAllowed,Opponent,cumulativeweek)
teamAllowed[, get("roll_4_passing_yards") := Reduce(`+`, shift(get("PassingYds"), 1:4))]
library(data.table)
statsandscores<-fread("./project/volume/data/processed/StatsandBoxscores.csv")
NFLvalues<-c("PassingYds","Int","PassingAtt","Cmp","RushingAtt",
"RushingYds","RushingTD","Rec","Tgt","ReceivingYds",
"ReceivingTD","FL","PPRFantasyPoints","StandardFantasyPoints",
"HalfPPRFantasyPoints")
teamAllowed<-dcast(statsandscores,Opponent+Tm+game_id+season+week+cumulativeweek~.,
sum,na.rm=T,value.var = NFLvalues)
setkey(teamAllowed,Opponent,cumulativeweek)
for (i in 1:length(NFLvalues)) {
teamAllowed[, new_column := Reduce(`+`, shift(get(NFLvalues[i]), 1:4))]
setnames(teamAllowed,"new_column",paste0("roll_4_",NFLvalues[i]))
}
View(teamAllowed)
View(playerstats)
library(data.table)
statsandscores<-fread("./project/volume/data/processed/StatsandBoxscores.csv")
player_achieved<-statsandscores
NFLvalues<-c("PassingYds","Int","PassingAtt","Cmp","RushingAtt",
"RushingYds","RushingTD","Rec","Tgt","ReceivingYds",
"ReceivingTD","FL","PPRFantasyPoints","StandardFantasyPoints",
"HalfPPRFantasyPoints")
setkey(player_achieved,Player,cumulativeweek)
for (i in 1:length(NFLvalues)) {
player_achieved[, new_column := Reduce(`+`, shift(get(NFLvalues[i]), 1:4))]
setnames(player_achieved,"new_column",paste0("roll_4_",NFLvalues[i]))
}
View(player_achieved)
View(player_achieved)
