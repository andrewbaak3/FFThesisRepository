weeks<-1:17
results<-data.table()
teamConstruct(DT[week==2], 1)
getPlayers(DT[week==1],"QB",1,15000)
i<1
i<-1
week_dt<-DT[week==i]
View(week_dt)
i<-4
week_dt<-DT[week==i]
View(week_dt)
week_DT <- DT[week==1]
View(week_DT)
Pos = "QB"
week_DT_pos<-week_DT[Pos==pos]
pos<-"QB"
week_DT_pos<-week_DT[Pos==pos]
View(week_DT_pos)
week_DT_pos$DPP<-week_DT_pos$DK_salary/week_DT_pos$PredPoints
n_players<-nrow(week_DT_pos)
player_combos<-data.table(t(combn(1:n_players,n)))
n<-1
player_combos<-data.table(t(combn(1:n_players,n)))
salary_combos<-data.table(t(combn(week_DT_pos$DK_salary,n)))
pos_DT<-data.table(pos=c("RB","WR","TE","QB"),max=c(3,4,2,1),min=c(2,3,1,1))
pos_DT[pos=="QB"]$max
pos<-"RB"
pos_DT[pos=="RB"]$max
week_DT_pos<-week_DT[Pos==pos]
View(week_DT_pos)
week_DT_pos$DPP<-week_DT_pos$DK_salary/week_DT_pos$PredPoints
week_DT_pos$DPP<-week_DT_pos$`DK salary`/week_DT_pos$PredPoints
n_players<-nrow(week_DT_pos)
n<-3
player_combos<-data.table(t(combn(1:n_players,n)))
salary_combos<-data.table(t(combn(week_DT_pos$DK_salary,n)))
point_combos<-data.table(t(combn(week_DT_pos$PredPoints,n)))
View(player_combos)
DT<-fread("./project/volume/data/teamconstruction/packingdata.csv")
View(DT)
setnames(DT, c("DK points","DK salary"), c("DK_points","DK_salary"))
View(DT)
week_DT<-DT[week==1]
pos<-"QB"
n<-1
week_DT_pos<-week_DT[Pos==pos]
View(week_DT_pos)
week_DT_pos$DPP<-week_DT_pos$DK_salary/week_DT_pos$PredPoints
View(week_DT_pos)
n_players<-nrow(week_DT_pos)
player_combos<-data.table(t(combn(1:n_players,n)))
salary_combos<-data.table(t(combn(week_DT_pos$DK_salary,n)))
point_combos<-data.table(t(combn(week_DT_pos$PredPoints,n)))
player_combos$total_salary<-rowSums(salary_combos)
player_combos$total_PredPoints<-rowSums(point_combos)
player_combos<-player_combos[total_salary<=salary_cap][order(-total_PredPoints)]
salary_cap<-20000
player_combos$total_salary<-rowSums(salary_combos)
player_combos$total_PredPoints<-rowSums(point_combos)
player_combos<-player_combos[total_salary<=salary_cap][order(-total_PredPoints)]
best_players<-data.table(t(player_combos[1,1:n]))
player_DT<-week_DT_pos[best_players$V1]
out<-list(players = player_DT )
out$n<-nrow(player_DT)
out$salary_tot<-sum(player_DT$DK_salary)
out$predDPP<-sum(player_DT$DK_salary)/sum(player_DT$PredPoints)
out$DK_points<-sum(player_DT$DK_points)
out
DT<-fread("./project/volume/data/teamconstruction/packingdata.csv")
setnames(DT, c("DK points","DK salary"), c("DK_points","DK_salary"))
week_DT<-DT[week==1]
teamConstruct(week_DT, 1.2)
teamConstruct<-function(week_DT,C){
salary_cap<-50000
salary_rm<-salary_cap
pos_rm<-8
avg_sal<-salary_rm/pos_rm
pos_DT<-data.table(pos=c("RB","WR","TE","QB"),max=c(3,4,2,1),min=c(2,3,1,1))
RB_out<- getPlayers(week_DT,"RB",pos_DT[pos=="RB"]$max,pos_DT[pos=="RB"]$max*avg_sal*C)
WR_out<- getPlayers(week_DT,"WR",pos_DT[pos=="WR"]$max,pos_DT[pos=="WR"]$max*avg_sal*C)
TE_out<- getPlayers(week_DT,"TE",pos_DT[pos=="TE"]$max,pos_DT[pos=="TE"]$max*avg_sal*C)
QB_out<- getPlayers(week_DT,"QB",pos_DT[pos=="QB"]$max,pos_DT[pos=="QB"]$max*avg_sal*C)
pos_order<-order(c(-RB_out$predDPP,-WR_out$predDPP,-TE_out$predDPP,-QB_out$predDPP))
pos_DT<-pos_DT[pos_order,]
#pos_DT<-rbind(pos_DT,data.table(pos="QB",max=1,min=1))
team<-NULL
flex_on_team<-FALSE
for (i in 1:4){
if (flex_on_team==FALSE){
salary_pos<-(salary_rm/8)*pos_DT$max[i]*C
new_players<-getPlayers(week_DT,pos_DT$pos[i],pos_DT$max[i],salary_pos)
pos_rm<-pos_rm-pos_DT$max[i]
}else{
avg_sal<-salary_rm/pos_rm
new_players<-getPlayers(week_DT,pos_DT$pos[i],pos_DT$min[i],avg_sal*pos_DT$min[i])
pos_rm<-pos_rm-pos_DT$min[i]
}
if (new_players$n==pos_DT[i]$max){flex_on_team=TRUE}
team<-list(players=rbind(team$players,new_players$players))
team$n<-nrow(team$players)
team$salary_tot<-sum(team$players$DK_salary)
team$predPPD<-sum(team$players$PredPoints)/sum(team$players$DK_salary)
team$predPoints<-sum(team$players$PredPoints)
team$points<-sum(team$players$DK_points)
salary_rm<-salary_cap-team$salary_tot
}
return(team)
}
getPlayers<-function(week_DT,pos,n,salary_cap){
week_DT_pos<-week_DT[Pos==pos]
week_DT_pos$DPP<-week_DT_pos$DK_salary/week_DT_pos$PredPoints
n_players<-nrow(week_DT_pos)
player_combos<-data.table(t(combn(1:n_players,n)))
salary_combos<-data.table(t(combn(week_DT_pos$DK_salary,n)))
point_combos<-data.table(t(combn(week_DT_pos$PredPoints,n)))
player_combos$total_salary<-rowSums(salary_combos)
player_combos$total_PredPoints<-rowSums(point_combos)
player_combos<-player_combos[total_salary<=salary_cap][order(-total_PredPoints)]
best_players<-data.table(t(player_combos[1,1:n]))
player_DT<-week_DT_pos[best_players$V1]
out<-list(players = player_DT )
out$n<-nrow(player_DT)
out$salary_tot<-sum(player_DT$DK_salary)
out$predDPP<-sum(player_DT$DK_salary)/sum(player_DT$PredPoints)
out$DK_points<-sum(player_DT$DK_points)
out
}
teamConstruct(week_DT, 1.2)
team
dog<-teamConstruct(week_DT, 1.2)
dog
weeks<-1:17
results<-data.table()
i<-1
week_dt<-DT[week==i]
View(week_dt)
temp<-teamConstruct(week_dt, 1.2)
temp
results<-rbind(results,temp)
temp<-as.data.table(temp)
View(temp)
results<-rbind(results,temp)
View(results)
View(results)
View(results)
DT<-fread("./project/volume/data/teamconstruction/packingdata.csv")
setnames(DT, c("DK points","DK salary"), c("DK_points","DK_salary"))
getPlayers<-function(week_DT,pos,n,salary_cap){
week_DT_pos<-week_DT[Pos==pos]
week_DT_pos$DPP<-week_DT_pos$DK_salary/week_DT_pos$PredPoints
n_players<-nrow(week_DT_pos)
player_combos<-data.table(t(combn(1:n_players,n)))
salary_combos<-data.table(t(combn(week_DT_pos$DK_salary,n)))
point_combos<-data.table(t(combn(week_DT_pos$PredPoints,n)))
player_combos$total_salary<-rowSums(salary_combos)
player_combos$total_PredPoints<-rowSums(point_combos)
player_combos<-player_combos[total_salary<=salary_cap][order(-total_PredPoints)]
best_players<-data.table(t(player_combos[1,1:n]))
player_DT<-week_DT_pos[best_players$V1]
out<-list(players = player_DT )
out$n<-nrow(player_DT)
out$salary_tot<-sum(player_DT$DK_salary)
out$predDPP<-sum(player_DT$DK_salary)/sum(player_DT$PredPoints)
out$DK_points<-sum(player_DT$DK_points)
out
}
teamConstruct<-function(week_DT,C){
salary_cap<-50000
salary_rm<-salary_cap
pos_rm<-8
avg_sal<-salary_rm/pos_rm
pos_DT<-data.table(pos=c("RB","WR","TE","QB"),max=c(3,4,2,1),min=c(2,3,1,1))
RB_out<- getPlayers(week_DT,"RB",pos_DT[pos=="RB"]$max,pos_DT[pos=="RB"]$max*avg_sal*C)
WR_out<- getPlayers(week_DT,"WR",pos_DT[pos=="WR"]$max,pos_DT[pos=="WR"]$max*avg_sal*C)
TE_out<- getPlayers(week_DT,"TE",pos_DT[pos=="TE"]$max,pos_DT[pos=="TE"]$max*avg_sal*C)
QB_out<- getPlayers(week_DT,"QB",pos_DT[pos=="QB"]$max,pos_DT[pos=="QB"]$max*avg_sal*C)
pos_order<-order(c(-RB_out$predDPP,-WR_out$predDPP,-TE_out$predDPP,-QB_out$predDPP))
pos_DT<-pos_DT[pos_order,]
#pos_DT<-rbind(pos_DT,data.table(pos="QB",max=1,min=1))
team<-NULL
flex_on_team<-FALSE
for (i in 1:4){
if (flex_on_team==FALSE){
salary_pos<-(salary_rm/8)*pos_DT$max[i]*C
new_players<-getPlayers(week_DT,pos_DT$pos[i],pos_DT$max[i],salary_pos)
pos_rm<-pos_rm-pos_DT$max[i]
}else{
avg_sal<-salary_rm/pos_rm
new_players<-getPlayers(week_DT,pos_DT$pos[i],pos_DT$min[i],avg_sal*pos_DT$min[i])
pos_rm<-pos_rm-pos_DT$min[i]
}
if (new_players$n==pos_DT[i]$max){flex_on_team=TRUE}
team<-list(players=rbind(team$players,new_players$players))
team$n<-nrow(team$players)
team$salary_tot<-sum(team$players$DK_salary)
team$predPPD<-sum(team$players$PredPoints)/sum(team$players$DK_salary)
team$predPoints<-sum(team$players$PredPoints)
team$points<-sum(team$players$DK_points)
salary_rm<-salary_cap-team$salary_tot
}
return(team)
}
weeks<-1:17
results<-data.table()
i<-1
week_dt<-DT[week==i]
temp<-teamConstruct(week_dt, 1.2)
temp
temp[1]
temp[2]
temp<-as.data.table(temp)
View(temp)
results<-rbind(results,temp)
View(results)
weeks<-1:17
results<-data.table()
for (i in 1:length(weeks)) {
week_dt<-DT[week==i]
temp<-teamConstruct(week_dt, 1.2)
temp<-as.data.table(temp)
results<-rbind(results,temp)
}
DT<-fread("./project/volume/data/teamconstruction/packingdata.csv")
setnames(DT, c("DK points","DK salary"), c("DK_points","DK_salary"))
getPlayers<-function(week_DT,pos,n,salary_cap){
week_DT_pos<-week_DT[Pos==pos]
week_DT_pos$DPP<-week_DT_pos$DK_salary/week_DT_pos$PredPoints
n_players<-nrow(week_DT_pos)
player_combos<-data.table(t(combn(1:n_players,n)))
salary_combos<-data.table(t(combn(week_DT_pos$DK_salary,n)))
point_combos<-data.table(t(combn(week_DT_pos$PredPoints,n)))
player_combos$total_salary<-rowSums(salary_combos)
player_combos$total_PredPoints<-rowSums(point_combos)
player_combos<-player_combos[total_salary<=salary_cap][order(-total_PredPoints)]
best_players<-data.table(t(player_combos[1,1:n]))
player_DT<-week_DT_pos[best_players$V1]
out<-list(players = player_DT )
out$n<-nrow(player_DT)
out$salary_tot<-sum(player_DT$DK_salary)
out$predDPP<-sum(player_DT$DK_salary)/sum(player_DT$PredPoints)
out$DK_points<-sum(player_DT$DK_points)
out
}
teamConstruct<-function(week_DT,C){
salary_cap<-50000
salary_rm<-salary_cap
pos_rm<-8
avg_sal<-salary_rm/pos_rm
pos_DT<-data.table(pos=c("RB","WR","TE","QB"),max=c(3,4,2,1),min=c(2,3,1,1))
RB_out<- getPlayers(week_DT,"RB",pos_DT[pos=="RB"]$max,pos_DT[pos=="RB"]$max*avg_sal*C)
WR_out<- getPlayers(week_DT,"WR",pos_DT[pos=="WR"]$max,pos_DT[pos=="WR"]$max*avg_sal*C)
TE_out<- getPlayers(week_DT,"TE",pos_DT[pos=="TE"]$max,pos_DT[pos=="TE"]$max*avg_sal*C)
QB_out<- getPlayers(week_DT,"QB",pos_DT[pos=="QB"]$max,pos_DT[pos=="QB"]$max*avg_sal*C)
pos_order<-order(c(-RB_out$predDPP,-WR_out$predDPP,-TE_out$predDPP,-QB_out$predDPP))
pos_DT<-pos_DT[pos_order,]
#pos_DT<-rbind(pos_DT,data.table(pos="QB",max=1,min=1))
team<-NULL
flex_on_team<-FALSE
for (i in 1:4){
if (flex_on_team==FALSE){
salary_pos<-(salary_rm/8)*pos_DT$max[i]*C
new_players<-getPlayers(week_DT,pos_DT$pos[i],pos_DT$max[i],salary_pos)
pos_rm<-pos_rm-pos_DT$max[i]
}else{
avg_sal<-salary_rm/pos_rm
new_players<-getPlayers(week_DT,pos_DT$pos[i],pos_DT$min[i],avg_sal*pos_DT$min[i])
pos_rm<-pos_rm-pos_DT$min[i]
}
if (new_players$n==pos_DT[i]$max){flex_on_team=TRUE}
team<-list(players=rbind(team$players,new_players$players))
team$n<-nrow(team$players)
team$salary_tot<-sum(team$players$DK_salary)
team$predPPD<-sum(team$players$PredPoints)/sum(team$players$DK_salary)
team$predPoints<-sum(team$players$PredPoints)
team$points<-sum(team$players$DK_points)
salary_rm<-salary_cap-team$salary_tot
}
return(team)
}
weeks<-1:17
results<-data.table()
for (i in 1:length(weeks)) {
week_dt<-DT[week==i]
temp<-teamConstruct(week_dt, 1.2)
temp<-as.data.table(temp)
results<-rbind(results,temp)
}
View(results)
dtype(results)
type(results)
class(results)
output<-list()
class(output)
dog<-teamConstruct(week_dt, 1.3)
dog
class(dog)
i<-1
week_dt<-DT[week==i]
temp<-teamConstruct(week_dt, 1.2)
temp
class(temp)
output<-list()
for (i in 1:length(weeks)) {
week_dt<-DT[week==i]
temp<-teamConstruct(week_dt, 1.2)
output<-append(output, temp)
}
output
output[1]
output[16]
View(output)
output[2]
output[2][2]
output[2][3]
output[3][3]
View(output)
output$players
output$players[1]
output$players[2]
View(results)
library(data.table)
DT<-fread("./project/volume/data/teamconstruction/packingdata.csv")
setnames(DT, c("DK points","DK salary"), c("DK_points","DK_salary"))
getPlayers<-function(week_DT,pos,n,salary_cap){
week_DT_pos<-week_DT[Pos==pos]
week_DT_pos$DPP<-week_DT_pos$DK_salary/week_DT_pos$PredPoints
n_players<-nrow(week_DT_pos)
player_combos<-data.table(t(combn(1:n_players,n)))
salary_combos<-data.table(t(combn(week_DT_pos$DK_salary,n)))
point_combos<-data.table(t(combn(week_DT_pos$PredPoints,n)))
player_combos$total_salary<-rowSums(salary_combos)
player_combos$total_PredPoints<-rowSums(point_combos)
player_combos<-player_combos[total_salary<=salary_cap][order(-total_PredPoints)]
best_players<-data.table(t(player_combos[1,1:n]))
player_DT<-week_DT_pos[best_players$V1]
out<-list(players = player_DT )
out$n<-nrow(player_DT)
out$salary_tot<-sum(player_DT$DK_salary)
out$predDPP<-sum(player_DT$DK_salary)/sum(player_DT$PredPoints)
out$DK_points<-sum(player_DT$DK_points)
out
}
teamConstruct<-function(week_DT,C){
salary_cap<-50000
salary_rm<-salary_cap
pos_rm<-8
avg_sal<-salary_rm/pos_rm
pos_DT<-data.table(pos=c("RB","WR","TE","QB"),max=c(3,4,2,1),min=c(2,3,1,1))
RB_out<- getPlayers(week_DT,"RB",pos_DT[pos=="RB"]$max,pos_DT[pos=="RB"]$max*avg_sal*C)
WR_out<- getPlayers(week_DT,"WR",pos_DT[pos=="WR"]$max,pos_DT[pos=="WR"]$max*avg_sal*C)
TE_out<- getPlayers(week_DT,"TE",pos_DT[pos=="TE"]$max,pos_DT[pos=="TE"]$max*avg_sal*C)
QB_out<- getPlayers(week_DT,"QB",pos_DT[pos=="QB"]$max,pos_DT[pos=="QB"]$max*avg_sal*C)
pos_order<-order(c(-RB_out$predDPP,-WR_out$predDPP,-TE_out$predDPP,-QB_out$predDPP))
pos_DT<-pos_DT[pos_order,]
#pos_DT<-rbind(pos_DT,data.table(pos="QB",max=1,min=1))
team<-NULL
flex_on_team<-FALSE
for (i in 1:4){
if (flex_on_team==FALSE){
salary_pos<-(salary_rm/8)*pos_DT$max[i]*C
new_players<-getPlayers(week_DT,pos_DT$pos[i],pos_DT$max[i],salary_pos)
pos_rm<-pos_rm-pos_DT$max[i]
}else{
avg_sal<-salary_rm/pos_rm
new_players<-getPlayers(week_DT,pos_DT$pos[i],pos_DT$min[i],avg_sal*pos_DT$min[i])
pos_rm<-pos_rm-pos_DT$min[i]
}
if (new_players$n==pos_DT[i]$max){flex_on_team=TRUE}
team<-list(players=rbind(team$players,new_players$players))
team$n<-nrow(team$players)
team$salary_tot<-sum(team$players$DK_salary)
team$predPPD<-sum(team$players$PredPoints)/sum(team$players$DK_salary)
team$predPoints<-sum(team$players$PredPoints)
team$points<-sum(team$players$DK_points)
salary_rm<-salary_cap-team$salary_tot
}
return(team)
}
weeks<-1:17
results<-data.table()
i<-2
week_dt<-DT[week==i]
temp<-teamConstruct(week_dt, 1.2)
temp
new_row<-data.table(week=i,predictedpoints=temp$predPoints,salary = temp$salary_tot, points=temp$points)
View(new_row)
results<-rbind(results,new_row)
View(results)
library(data.table)
DT<-fread("./project/volume/data/teamconstruction/packingdata.csv")
setnames(DT, c("DK points","DK salary"), c("DK_points","DK_salary"))
getPlayers<-function(week_DT,pos,n,salary_cap){
week_DT_pos<-week_DT[Pos==pos]
week_DT_pos$DPP<-week_DT_pos$DK_salary/week_DT_pos$PredPoints
n_players<-nrow(week_DT_pos)
player_combos<-data.table(t(combn(1:n_players,n)))
salary_combos<-data.table(t(combn(week_DT_pos$DK_salary,n)))
point_combos<-data.table(t(combn(week_DT_pos$PredPoints,n)))
player_combos$total_salary<-rowSums(salary_combos)
player_combos$total_PredPoints<-rowSums(point_combos)
player_combos<-player_combos[total_salary<=salary_cap][order(-total_PredPoints)]
best_players<-data.table(t(player_combos[1,1:n]))
player_DT<-week_DT_pos[best_players$V1]
out<-list(players = player_DT )
out$n<-nrow(player_DT)
out$salary_tot<-sum(player_DT$DK_salary)
out$predDPP<-sum(player_DT$DK_salary)/sum(player_DT$PredPoints)
out$DK_points<-sum(player_DT$DK_points)
out
}
teamConstruct<-function(week_DT,C){
salary_cap<-50000
salary_rm<-salary_cap
pos_rm<-8
avg_sal<-salary_rm/pos_rm
pos_DT<-data.table(pos=c("RB","WR","TE","QB"),max=c(3,4,2,1),min=c(2,3,1,1))
RB_out<- getPlayers(week_DT,"RB",pos_DT[pos=="RB"]$max,pos_DT[pos=="RB"]$max*avg_sal*C)
WR_out<- getPlayers(week_DT,"WR",pos_DT[pos=="WR"]$max,pos_DT[pos=="WR"]$max*avg_sal*C)
TE_out<- getPlayers(week_DT,"TE",pos_DT[pos=="TE"]$max,pos_DT[pos=="TE"]$max*avg_sal*C)
QB_out<- getPlayers(week_DT,"QB",pos_DT[pos=="QB"]$max,pos_DT[pos=="QB"]$max*avg_sal*C)
pos_order<-order(c(-RB_out$predDPP,-WR_out$predDPP,-TE_out$predDPP,-QB_out$predDPP))
pos_DT<-pos_DT[pos_order,]
#pos_DT<-rbind(pos_DT,data.table(pos="QB",max=1,min=1))
team<-NULL
flex_on_team<-FALSE
for (i in 1:4){
if (flex_on_team==FALSE){
salary_pos<-(salary_rm/8)*pos_DT$max[i]*C
new_players<-getPlayers(week_DT,pos_DT$pos[i],pos_DT$max[i],salary_pos)
pos_rm<-pos_rm-pos_DT$max[i]
}else{
avg_sal<-salary_rm/pos_rm
new_players<-getPlayers(week_DT,pos_DT$pos[i],pos_DT$min[i],avg_sal*pos_DT$min[i])
pos_rm<-pos_rm-pos_DT$min[i]
}
if (new_players$n==pos_DT[i]$max){flex_on_team=TRUE}
team<-list(players=rbind(team$players,new_players$players))
team$n<-nrow(team$players)
team$salary_tot<-sum(team$players$DK_salary)
team$predPPD<-sum(team$players$PredPoints)/sum(team$players$DK_salary)
team$predPoints<-sum(team$players$PredPoints)
team$points<-sum(team$players$DK_points)
salary_rm<-salary_cap-team$salary_tot
}
return(team)
}
weeks<-1:17
results<-data.table()
for (i in 1:length(weeks)) {
week_dt<-DT[week==i]
temp<-teamConstruct(week_dt, 1.2)
new_row<-data.table(week=i,predpoints=temp$predPoints,salary = temp$salary_tot, points=temp$points)
results<-rbind(results,new_row)
}
View(results)
historicalDK<-fread("./project/volume/data/teamconstruction/resultsdb.csv")
View(historicalDK)
historicalDK<-fread("./project/volume/data/teamconstruction/resultsdb.csv")
View(historicalDK)
historicalDK<-historicalDK[1:624, ]
View(historicalDK)
setnames(historicalDK, "Week", "week")
View(historicalDK)
setkey(results,week)
setkey(historicalDK,week)
analysis_table<-merge(historicalDK,results)
View(analysis_table)
#Compute profits
analysis_table$Profit <- if(analysis_table$points>analysis_table$`Cash Line`){analysis_table$`Top Prize`-analysis_table$`Buy In`}
for (i in 1:length(analysis_table)) {
if (analysis_table$points[i] > analysis_table$`Cash Line`) {
analysis_table$Profit[i] <- analysis_table$`Top Prize`[i]-analysis_table$`Buy In`[i]
}
else {
analysis_table$Profit[i] <- 0
}
}
View(analysis_table)
for (i in 1:length(analysis_table)) {
if (analysis_table$points[i] > analysis_table$`Cash Line`[i]) {
analysis_table$Profit[i] <- analysis_table$`Top Prize`[i]-analysis_table$`Buy In`[i]
}
else {
analysis_table$Profit[i] <- 0
}
}
View(analysis_table)
if(analysis_table$points>analysis_table$`Cash Line`){
analysis_table$Profit<-analysis_table$`Top Prize`-analysis_table$`Buy In`
}
for(i in 1:length(analysis_table)){
if(analysis_table$points[i]>analysis_table$`Cash Line`[i]){
analysis_table$Profit[i]<-analysis_table$`Top Prize`[i]-analysis_table$`Buy In`[i]
}
}
View(analysis_table)
setnames(analysis_table, c("Cash Line","Top Prize","Buy In","Max Entries","Prize Pool"),
c("CashLine","TopPrize","BuyIn","MaxEntries","PrizePool"))
View(analysis_table)
analysis_table$points>analysis_table$CashLine
analysis_table$Profit<-((analysis_table$points>analysis_table$CashLine)*analysis_table$TopPrize)-analysis_table$BuyIn
View(analysis_table)
colsums(analysis_table$Profit)
profits<-colSums(analysis_table$Profit)
profits<-colsum(analysis_table$Profit)
profits<-sum(analysis_table$Profit)
profits
profits<-sum(analysis_table$Profit)
is.na(analysis_table$Profit)
unique(analysis_table$Profit)
profits<-sum(analysis_table$Profit, na.rm = T)
profits
